// Mocks generated by Mockito 5.0.17 from annotations
// in quick_chat/test/dummy/mock_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:quick_chat/data/models/room_model.dart' as _i7;
import 'package:quick_chat/data/models/user_model.dart' as _i6;
import 'package:quick_chat/domain/repository/repository.dart' as _i3;
import 'package:quick_chat/utils/failures.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i3.Repository {
  MockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<_i4.Failure, _i5.Stream<List<_i6.UserModel>>> getUsers(
          String? keyword, _i6.UserModel? currentUser) =>
      (super.noSuchMethod(Invocation.method(#getUsers, [keyword, currentUser]),
              returnValue:
                  _FakeEither_0<_i4.Failure, _i5.Stream<List<_i6.UserModel>>>())
          as _i2.Either<_i4.Failure, _i5.Stream<List<_i6.UserModel>>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, String>> createUser(
          {_i6.UserModel? user, String? imagePath}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #createUser, [], {#user: user, #imagePath: imagePath}),
              returnValue: Future<_i2.Either<_i4.Failure, String>>.value(
                  _FakeEither_0<_i4.Failure, String>()))
          as _i5.Future<_i2.Either<_i4.Failure, String>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, String>> sendMessage(
          {dynamic message, String? imagePath, _i7.RoomModel? room}) =>
      (super.noSuchMethod(
              Invocation.method(#sendMessage, [],
                  {#message: message, #imagePath: imagePath, #room: room}),
              returnValue: Future<_i2.Either<_i4.Failure, String>>.value(
                  _FakeEither_0<_i4.Failure, String>()))
          as _i5.Future<_i2.Either<_i4.Failure, String>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, String>> updateUser(
          {_i6.UserModel? user, String? imagePath}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #updateUser, [], {#user: user, #imagePath: imagePath}),
              returnValue: Future<_i2.Either<_i4.Failure, String>>.value(
                  _FakeEither_0<_i4.Failure, String>()))
          as _i5.Future<_i2.Either<_i4.Failure, String>>);
  @override
  _i2.Either<_i4.Failure, _i5.Stream<_i6.UserModel?>> getUser(String? id) =>
      (super.noSuchMethod(Invocation.method(#getUser, [id]),
              returnValue:
                  _FakeEither_0<_i4.Failure, _i5.Stream<_i6.UserModel?>>())
          as _i2.Either<_i4.Failure, _i5.Stream<_i6.UserModel?>>);
  @override
  _i2.Either<_i4.Failure, _i5.Stream<List<dynamic>>> getMessages(
          String? roomId) =>
      (super.noSuchMethod(Invocation.method(#getMessages, [roomId]),
              returnValue:
                  _FakeEither_0<_i4.Failure, _i5.Stream<List<dynamic>>>())
          as _i2.Either<_i4.Failure, _i5.Stream<List<dynamic>>>);
  @override
  _i2.Either<_i4.Failure, _i5.Stream<List<_i7.RoomModel?>>> getRooms(
          String? currentUserId) =>
      (super.noSuchMethod(Invocation.method(#getRooms, [currentUserId]),
              returnValue: _FakeEither_0<_i4.Failure,
                  _i5.Stream<List<_i7.RoomModel?>>>())
          as _i2.Either<_i4.Failure, _i5.Stream<List<_i7.RoomModel?>>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, String?>> pickImage() =>
      (super.noSuchMethod(Invocation.method(#pickImage, []),
              returnValue: Future<_i2.Either<_i4.Failure, String?>>.value(
                  _FakeEither_0<_i4.Failure, String?>()))
          as _i5.Future<_i2.Either<_i4.Failure, String?>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, _i7.RoomModel>> createRoom(
          _i7.RoomModel? room) =>
      (super.noSuchMethod(Invocation.method(#createRoom, [room]),
              returnValue: Future<_i2.Either<_i4.Failure, _i7.RoomModel>>.value(
                  _FakeEither_0<_i4.Failure, _i7.RoomModel>()))
          as _i5.Future<_i2.Either<_i4.Failure, _i7.RoomModel>>);
}
